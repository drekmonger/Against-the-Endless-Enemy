{"version":3,"file":"app.js","sources":["../node_modules/hyperapp/src/h.js","../node_modules/hyperapp/src/app.js","../src/actions/search.js","../src/actions/tweezer.js","../src/helpers.js","../src/actions/actions.js","../src/state/state.js","../src/views/mapmaker.js","../src/views/ccard.js","../src/views/act.js","../src/views/camp.js","../src/views/mainview.js","../src/app.js"],"sourcesContent":["var i\nvar stack = []\n\nexport function h(type, props) {\n  var node\n  var children = []\n\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n\n  while (stack.length) {\n    if (Array.isArray((node = stack.pop()))) {\n      for (i = node.length; i--; ) {\n        stack.push(node[i])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(typeof node === \"number\" ? (node = node + \"\") : node)\n    }\n  }\n\n  return typeof type === \"string\"\n    ? { type: type, props: props || {}, children: children }\n    : type(props || {}, children)\n}\n","import { h } from \"./h\"\n\nexport function app(props, container) {\n  var root = (container = container || document.body).children[0]\n  var node = toVNode(root, [].map)\n  var callbacks = []\n  var skipRender\n  var globalState\n  var globalActions\n\n  repaint(flush(init(props, (globalState = {}), (globalActions = {}))))\n\n  return globalActions\n\n  function repaint() {\n    if (props.view && !skipRender) {\n      requestAnimationFrame(render, (skipRender = !skipRender))\n    }\n  }\n\n  function render() {\n    flush(\n      (root = patchElement(\n        container,\n        root,\n        node,\n        (node = props.view(globalState, globalActions)),\n        (skipRender = !skipRender)\n      ))\n    )\n  }\n\n  function flush(cb) {\n    while ((cb = callbacks.pop())) cb()\n  }\n\n  function toVNode(element, map) {\n    return (\n      element &&\n      h(\n        element.tagName.toLowerCase(),\n        {},\n        map.call(element.childNodes, function(element) {\n          return element.nodeType === 3\n            ? element.nodeValue\n            : toVNode(element, map)\n        })\n      )\n    )\n  }\n\n  function init(module, state, actions) {\n    if (module.init) {\n      callbacks.push(function() {\n        module.init(state, actions)\n      })\n    }\n\n    assign(state, module.state)\n\n    initActions(state, actions, module.actions)\n\n    for (var i in module.modules) {\n      init(module.modules[i], (state[i] = {}), (actions[i] = {}))\n    }\n  }\n\n  function initActions(state, actions, source) {\n    Object.keys(source || {}).map(function(i) {\n      if (typeof source[i] === \"function\") {\n        actions[i] = function(data) {\n          return typeof (data = source[i](state, actions, data)) === \"function\"\n            ? data(update)\n            : update(data)\n        }\n      } else {\n        initActions(state[i] || (state[i] = {}), (actions[i] = {}), source[i])\n      }\n    })\n\n    function update(data) {\n      return (\n        typeof data === \"function\"\n          ? update(data(state))\n          : data && repaint(assign(state, data)),\n        state\n      )\n    }\n  }\n\n  function assign(target, source) {\n    for (var i in source) {\n      target[i] = source[i]\n    }\n    return target\n  }\n\n  function merge(target, source) {\n    return assign(assign({}, target), source)\n  }\n\n  function createElement(node, isSVG) {\n    if (typeof node === \"string\") {\n      var element = document.createTextNode(node)\n    } else {\n      var element = (isSVG = isSVG || node.type === \"svg\")\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n        : document.createElement(node.type)\n\n      if (node.props && node.props.oncreate) {\n        callbacks.push(function() {\n          node.props.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(createElement(node.children[i], isSVG))\n      }\n\n      for (var i in node.props) {\n        setElementProp(element, i, node.props[i])\n      }\n    }\n    return element\n  }\n\n  function setElementProp(element, name, value, oldValue) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var name in merge(oldValue, (value = value || {}))) {\n        element.style[name] = value[name] || \"\"\n      }\n    } else {\n      try {\n        element[name] = value\n      } catch (_) {}\n\n      if (typeof value !== \"function\") {\n        if (value) {\n          element.setAttribute(name, value)\n        } else {\n          element.removeAttribute(name)\n        }\n      }\n    }\n  }\n\n  function updateElement(element, oldProps, props) {\n    for (var i in merge(oldProps, props)) {\n      var value = props[i]\n      var oldValue = i === \"value\" || i === \"checked\" ? element[i] : oldProps[i]\n\n      if (value !== oldValue) {\n        value !== oldValue && setElementProp(element, i, value, oldValue)\n      }\n    }\n\n    if (props && props.onupdate) {\n      callbacks.push(function() {\n        props.onupdate(element, oldProps)\n      })\n    }\n  }\n\n  function removeElement(parent, element, props) {\n    if (\n      props &&\n      props.onremove &&\n      typeof (props = props.onremove(element)) === \"function\"\n    ) {\n      props(remove)\n    } else {\n      remove()\n    }\n\n    function remove() {\n      parent.removeChild(element)\n    }\n  }\n\n  function getKey(node) {\n    if (node && node.props) {\n      return node.props.key\n    }\n  }\n\n  function patchElement(parent, element, oldNode, node, isSVG, nextSibling) {\n    if (oldNode == null) {\n      element = parent.insertBefore(createElement(node, isSVG), element)\n    } else if (node.type != null && node.type === oldNode.type) {\n      updateElement(element, oldNode.props, node.props)\n\n      isSVG = isSVG || node.type === \"svg\"\n\n      var len = node.children.length\n      var oldLen = oldNode.children.length\n      var oldKeyed = {}\n      var oldElements = []\n      var keyed = {}\n\n      for (var i = 0; i < oldLen; i++) {\n        var oldElement = (oldElements[i] = element.childNodes[i])\n        var oldChild = oldNode.children[i]\n        var oldKey = getKey(oldChild)\n\n        if (null != oldKey) {\n          oldKeyed[oldKey] = [oldElement, oldChild]\n        }\n      }\n\n      var i = 0\n      var j = 0\n\n      while (j < len) {\n        var oldElement = oldElements[i]\n        var oldChild = oldNode.children[i]\n        var newChild = node.children[j]\n\n        var oldKey = getKey(oldChild)\n        if (keyed[oldKey]) {\n          i++\n          continue\n        }\n\n        var newKey = getKey(newChild)\n\n        var keyedNode = oldKeyed[newKey] || []\n\n        if (null == newKey) {\n          if (null == oldKey) {\n            patchElement(element, oldElement, oldChild, newChild, isSVG)\n            j++\n          }\n          i++\n        } else {\n          if (oldKey === newKey) {\n            patchElement(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n            i++\n          } else if (keyedNode[0]) {\n            element.insertBefore(keyedNode[0], oldElement)\n            patchElement(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n          } else {\n            patchElement(element, oldElement, null, newChild, isSVG)\n          }\n\n          j++\n          keyed[newKey] = newChild\n        }\n      }\n\n      while (i < oldLen) {\n        var oldChild = oldNode.children[i]\n        var oldKey = getKey(oldChild)\n        if (null == oldKey) {\n          removeElement(element, oldElements[i], oldChild.props)\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        var keyedNode = oldKeyed[i]\n        var reusableNode = keyedNode[1]\n        if (!keyed[reusableNode.props.key]) {\n          removeElement(element, keyedNode[0], reusableNode.props)\n        }\n      }\n    } else if (element && node !== element.nodeValue) {\n      if (typeof node === \"string\" && typeof oldNode === \"string\") {\n        element.nodeValue = node\n      } else {\n        element = parent.insertBefore(\n          createElement(node, isSVG),\n          (nextSibling = element)\n        )\n        removeElement(parent, nextSibling, oldNode.props)\n      }\n    }\n    return element\n  }\n}\n","/*for (let x = -1; x < 2; x++) {\r\n                for (let y = -1; y < 2; y++) {\r\n                    if (!(x == 0 && y == 0)) {\r\n                        let cX = current.x + x\r\n                        let cY = current.y + y\r\n                        if (cY >= 0 && cX >= 0 && cY < grid[0].length && cX < grid.length) {\r\n                            neigbors.push({ x: cX, y: cY })\r\n                        }\r\n                    }\r\n                }\r\n            }*/\r\n//above for diag movement\r\n\r\n\r\n\r\n\r\nexport function search(grid, start, distanceLimit = 100, ignorePawns=false) {\r\n\r\n    let frontier = []\r\n    frontier.push(start)\r\n\r\n    //clean the grid\r\n    for (let y = 0; y < 14; y++) {\r\n        for (let x = 0; x < 22; x++) {\r\n            grid[y][x].distance = null\r\n            grid[y][x].came_from = null\r\n        }\r\n    }\r\n\r\n    grid[start.y][start.x].distance = 0\r\n\r\n    while (frontier.length > 0) {\r\n        let current = frontier.shift()\r\n        if (grid[current.y][current.x].distance < distanceLimit) {\r\n            //find neighbors to current\r\n            let neighbors = []\r\n            \r\n            //north\r\n            neighbors.push({ x: current.x, y: current.y-1 })\r\n\r\n            //east\r\n            neighbors.push({ x: current.x+1, y: current.y })\r\n\r\n            //south\r\n            neighbors.push({ x: current.x, y: current.y+1 })\r\n\r\n            //west\r\n            neighbors.push({ x: current.x-1, y: current.y })\r\n\r\n            //search each neighbor\r\n            for (let n of neighbors) {\r\n                if (n.y >= 0 && n.x >= 0 && n.y < 14 && n.x < 22) {\r\n                    let nC = grid[n.y][n.x]\r\n                    if (nC.distance === null && !nC.wall && (!nC.occupied || (nC.occupied.isPlayer && ignorePawns)) ) {\r\n                        frontier.push(n)\r\n                        nC.distance = 1 + grid[current.y][current.x].distance\r\n                        nC.came_from = current\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return { grid }\r\n}\r\n\r\n\r\nexport function walkTo(start, end, grid) {\r\n    //requires grid be primed for start by the search function\r\n    let path = []\r\n    let current = end\r\n\r\n    while (!(current == null)) {\r\n        path.unshift(current)\r\n        current = grid[current.y][current.x].came_from\r\n    }\r\n    return path.length > 1 ? path : null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//https://github.com/jaxgeller/tweezer.js/blob/master/src/tweezer.js\r\n\r\nfunction wrapTween({ start, arr, tickFN, endFN, duration, first = true }) {\r\n\r\n  let end = arr[0]\r\n\r\n  var T = new Tweezer({\r\n    start,\r\n    end,\r\n    duration\r\n  })\r\n    .on('tick', value => tickFN(value))\r\n    .on('done', () => {\r\n      if (arr.length == 1) {\r\n        endFN()\r\n      } else {\r\n        wrapTween({\r\n          start: end,\r\n          arr: arr.slice(1),\r\n          tickFN,\r\n          endFN,\r\n          duration,\r\n          first: false\r\n        })\r\n      }\r\n    })\r\n    .begin()\r\n\r\n}\r\n\r\nclass Tweezer {\r\n  constructor(opts = {}) {\r\n    this.duration = opts.duration || 1000\r\n    this.ease = (t, b, c, d) => c * t / d + b\r\n    this.start = opts.start\r\n    this.end = opts.end\r\n\r\n    this.frame = null\r\n    this.next = null\r\n    this.isRunning = false\r\n    this.events = {}\r\n    this.directionX = this.start.x < this.end.x ? \"up\" : \"down\"\r\n    this.directionY = this.start.y < this.end.y ? \"up\" : \"down\"\r\n  }\r\n\r\n  begin() {\r\n    if (!this.isRunning && this.next !== this.end) {\r\n      this.frame = window.requestAnimationFrame(this._tick.bind(this))\r\n    }\r\n    return this\r\n  }\r\n\r\n  stop() {\r\n    window.cancelAnimationFrame(this.frame)\r\n    this.isRunning = false\r\n    this.frame = null\r\n    this.timeStart = null\r\n    this.next = null\r\n    return this\r\n  }\r\n\r\n  on(name, handler) {\r\n    this.events[name] = this.events[name] || []\r\n    this.events[name].push(handler)\r\n    return this\r\n  }\r\n\r\n  emit(name, val) {\r\n    let e = this.events[name]\r\n    e && e.forEach(handler => handler.call(this, val))\r\n  }\r\n\r\n  _tick(currentTime) {\r\n    this.isRunning = true\r\n\r\n    let lastTick = this.next || this.start\r\n\r\n    if (!this.timeStart) this.timeStart = currentTime\r\n    this.timeElapsed = currentTime - this.timeStart\r\n    this.next = {\r\n      x: Math.round(this.ease(this.timeElapsed, this.start.x, this.end.x - this.start.x, this.duration)),\r\n      y: Math.round(this.ease(this.timeElapsed, this.start.y, this.end.y - this.start.y, this.duration))\r\n    }\r\n\r\n    if (this._shouldTick(lastTick)) {\r\n      this.emit('tick', this.next)\r\n      this.frame = window.requestAnimationFrame(this._tick.bind(this))\r\n    } else {\r\n      this.emit('tick', this.end)\r\n      this.emit('done', null)\r\n\r\n    }\r\n  }\r\n\r\n  _shouldTick(lastTick) {\r\n    return ({\r\n      up: this.next.x < this.end.x && lastTick.x <= this.next.x,\r\n      down: this.next.x > this.end.x && lastTick.x >= this.next.x\r\n    }[this.directionX] ||\r\n\r\n      {\r\n        up: this.next.y < this.end.y && lastTick.y <= this.next.y,\r\n        down: this.next.y > this.end.y && lastTick.y >= this.next.y\r\n      }[this.directionY])\r\n  }\r\n\r\n}\r\n\r\nexport default wrapTween","//helper functions\r\n\r\nexport let TOP = 95\r\nexport let LEFT = 140\r\nexport let cT = (n) => n * 50 - 50  //convert Tiles to pixels\r\n\r\nexport let campSanity = (camp, cost = true) => {\r\n    return ((camp.supplies > 0 || cost == false) && camp.phase <= 3 && !camp.pickGuild) \r\n}\r\n\r\nexport let isRare = () => Math.random() > .8\r\n\r\nexport let distance = (pA, pB) => Math.hypot(pB.tX - pA.tX, pB.tY - pA.tY) //distance between two pawns\r\n\r\nexport let lineSight = (a, b, grid) => {  //returns 100 if a wall is found between two Tiles, a-Start and b-End\r\n    //http://rosettacode.org/wiki/Bitmap/Bresenham%27s_line_algorithm#JavaScript\r\n\r\n    let dx = Math.abs(b.tX - a.tX), sx = a.tX < b.tX ? 1 : -1\r\n    let dy = Math.abs(b.tY - a.tY), sy = a.tY < b.tY ? 1 : -1;\r\n    let err = (dx > dy ? dx : -dy) / 2;\r\n    let wall = false\r\n    let acc = { tX: a.tX, tY: a.tY }\r\n    while (true) {\r\n        if (grid[acc.tY][acc.tX].wall) { wall = true; break }\r\n        if (acc.tX === b.tX && acc.tY === b.tY) break;\r\n        let e2 = err;\r\n        if (e2 > -dx) { err -= dy; acc.tX += sx; }\r\n        if (e2 < dy) { err += dx; acc.tY += sy; }\r\n    }\r\n\r\n    if (wall) { return 100 }\r\n    return distance(a, b)\r\n}\r\n\r\nexport function rgb(r, g, b) {\r\n    return [\"rgb(\", r, \",\", g, \",\", b, \")\"].join(\"\");\r\n}\r\n\r\n//shuffle array in place\r\nexport function shuffle(arr) {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n    }\r\n}","//helper functions\nimport { search, walkTo } from './search'\nimport tween from \"./tweezer\"\nimport { campSanity, isRare, cT, distance, lineSight, rgb, shuffle } from \"../helpers\"\n\n\nexport default {\n    //****APPLICATION************************************************************\n\n    gameInit: (state, actions, event) => {\n\n        actions.gameInitialState()\n        actions.pawnCreate(0)\n        actions.pawnCreate(1)\n        actions.pawnCreate(2)\n        actions.mapInit()\n        console.log(state)\n\n    },\n\n    gameInitialState: (state) => {\n        let camp = state.camp\n        camp.supplies = 4\n\n        return ({\n            camp,\n            day: 0,\n            pawns: [],\n            enemies: []\n        })\n    },\n\n    gameOver: (state, actions) => {\n\n        return {\n            gameStatus: 3\n        }\n    },\n\n    //****TURN****************************************************************\n\n    turnBegin: (state, actions) => {\n        actions.turnSpawnEnemies()\n        actions.turnInitialState()\n        actions.turnNextPawn()\n    },\n\n    turnSpawnEnemies: (state, actions) => {\n\n\n        let grid = state.grid\n        let col = 21\n        let m = state.monsters\n        let p = state.monsterPoints\n\n        let spawnLocs = []\n        for (let i = 1; i < 12; i++) {\n            if (!grid[i][col].occupied) {\n                spawnLocs.push(i)\n            }\n        }\n\n        if (spawnLocs.length > 0) {\n            shuffle(spawnLocs)\n\n            let t = Math.floor(Math.random() * (4))\n\n            for (let i = 0; i <= t; i++) {\n                if (p > 0) {\n                    let gID = Math.floor(Math.random() * (4))\n\n                    if (m[gID].cost > p || (state.day < 3 && gID == 4)) {\n                        gID = 0\n                    }\n                    p = p - m[gID].cost\n                    actions.monsterCreate({ gID, tX: col, tY: spawnLocs.pop() })\n                    if (spawnLocs.length == 0 || p == 0) { break }\n                }\n            }\n        }\n\n        return ({\n            monsterPoints: p,\n            enemies: [...state.enemies]\n        })\n    },\n\n    turnInitialState: (state) => {\n        return ({\n            turnPhase: 0,\n            currentPawn: null,\n            initiative: [...state.enemies, ...state.pawns]\n        })\n    },\n\n    turnNextPawn: (state, actions) => {\n        if (state.initiative.length == 0) {\n            actions.turnBegin()\n        } else {\n            let currentPawn = state.initiative.shift()\n            if (currentPawn.isPlayer) {\n                actions.turnPhaseMove(currentPawn)\n            } else {\n                actions.turnEnemy(currentPawn)\n            }\n        }\n    },\n\n    turnPhaseMove: (state, actions, pawn) => {\n\n        let grid = [...state.grid]\n        let start = { x: pawn.tX, y: pawn.tY }\n        search(grid, start, pawn.move, true)\n        console.log(pawn)\n\n        return ({\n            turnPhase: 1,\n            currentPawn: pawn,\n            grid\n        })\n\n    },\n\n    turnPhaseAction: (state, actions) => {\n        let actList = []\n        let p = state.currentPawn\n        let enemies = state.enemies\n        //a-action d-description t-target   d-description\n\n        for (let e of enemies) {\n\n            let dist = lineSight(p, e, state.grid)\n\n            if (dist == 1) {\n                actList.push({ a: actions.pawnDoAttack, d: \"attack\", t: e })\n            } else if (dist <= p.special.range && !p.isExhaust) {\n                actList.push({ a: actions.pawnSpecial, d: p.special.desc, t: e })\n            }\n\n        }\n\n        if (actList.length == 0) {\n            actions.pawnDoNothing()\n            return null\n        }\n\n        actList.push({ a: actions.pawnDoNothing, d: \"rest\", t: p }, )\n\n        return ({\n            turnPhase: 3,\n            actList\n        })\n    },\n\n    turnEnemy: (state, actions, pawn) => {\n        actions.turnEnemyInit(pawn)\n        let dR = pawn.range //desired range of monster\n        let targets = state.pawns\n        let grid = state.grid\n\n        //goto actions if there's a player in range\n\n        let viable = []\n\n        if (pawn.range == 1 && pawn.tX != 21) {\n            for (let t of targets) {\n                if (distance(t, pawn) <= 1) {\n                    viable.push(t)\n                }\n            }\n\n\n            if (viable.length > 0) {\n                actions.turnEnemyAction(pawn)\n                return null\n            }\n        }\n\n        //for each player, compile a list of locations the monster wants to be \n        viable = []\n\n        for (let t of targets) {\n            search(grid, { x: t.tX, y: t.tY })\n            for (let row of grid) {\n                for (let tile of row) {\n                    if (tile.distance && tile.distance == dR) { viable.push(tile) }\n                }\n            }\n        }\n\n        //if no viable, goto to action\n        if (viable.length == 0) {\n            actions.turnEnemyAction(pawn)\n            return null\n        }\n\n        //for each viable location, walkTo it. Find the shortest path.\n        viable = viable.map(v => ({ x: v.id.x, y: v.id.y }))\n\n        let start = { x: pawn.tX, y: pawn.tY }\n        search(grid, start)\n\n        for (let v of viable) {\n            v.d = (grid[v.y][v.x].distance) ? (grid[v.y][v.x].distance) : 100\n        }\n\n\n        viable.sort((a, b) => a.d - b.d)\n        //if no path found, goto actions. otherwise, move the monster\n        if (viable[0].d == 100) {\n            actions.turnEnemyAction(pawn)\n        } else {\n            let dest = walkTo({ x: pawn.tX, y: pawn.tY }, viable[0], grid).slice(0, pawn.move + 1).slice(-1)[0]\n            actions.pawnMove(dest)\n        }\n    },\n\n    turnEnemyInit: (state, actions, pawn) => {\n        return ({\n            turnPhase: 5,\n            currentPawn: pawn,\n        })\n    },\n\n    turnEnemyAction: (state, actions, pawn) => {\n\n        let targets = state.pawns\n        let dR = pawn.range\n\n        let viable = []\n        for (let t of targets) {\n            if (distance(t, pawn) <= 1) {\n                viable.push(t)\n            }\n        }\n\n        if (viable.length > 0) {\n            if (viable.legnth > 1) {\n                shuffle(viable)\n            }\n\n            actions.pawnDoAttack(viable[0])\n            return null\n        }\n\n        console.log(\"enemy action\")\n        actions.turnDone()\n    },\n\n    turnDone: (state, actions) => {\n\n        if (state.enemies.length == 0 && state.monsterPoints == 0) {\n            //VICTORY\n            return ({\n                gameStatus: 3,\n                turnPhase: 10\n            })\n\n        }\n\n        if (state.pawns == 0) {\n            //DEFEAT\n            return ({\n                gameStatus: 4,\n                turnPhase: 10\n            })\n        }\n\n        actions.turnNextPawn()\n    },\n\n    //****MAP******************************************************************\n\n    mapInit: (state, actions) => {\n        actions.mapInitialState()\n        actions.turnBegin()\n    },\n\n    mapInitialState: (state) => {\n        //make the grid out of a map\n        let map = state.map\n\n        let grid$ = \"\"\n\n        for (let n of map) {\n            grid$ += n.toString(2)\n        }\n\n        map = []\n\n        for (let y = 0; y < 14; y++) {\n            let r = []\n            for (let x = 0; x < 22; x++) {\n                let i = y * 22 + x\n                r.push(+grid$.slice(i, i + 1))\n            }\n            map.push(r)\n        }\n\n        let grid = []\n        let row = []\n\n        for (let y = 0; y < 14; y++) {\n            row = []\n            for (let x = 0; x < 22; x++) {\n                let shade = Math.round(Math.random() * 13) - (6 * map[y][x])\n                let grass = \"rgb(\" + (177 + shade) + \", \" + \" \"\n                let item = { wall: map[y][x], grass: rgb(177 + shade, 182 + shade, 149 + shade), tkeys: x + y * 22, occupied: false, id: { x, y } }\n                row.push(item)\n            }\n            grid.push(row)\n        }\n\n        //set player's pawns to spawn points\n        let pawns = []\n        let enemies = []\n        let spawns = [...state.playerSpawn]\n        shuffle(spawns)\n\n        let i = 0\n        for (let p of state.pawns) {\n            let loc = spawns[i]\n            p.tX = loc.x\n            p.tY = loc.y\n            p.x = cT(p.tX)\n            p.y = cT(p.tY)\n            grid[loc.y][loc.x].occupied = p\n            pawns.push(p)\n            i++\n        }\n\n        let monsterPoints = 5 + state.day - state.camp.patrolKills\n\n        //let monsterPoints = 1\n\n        return ({\n            day: state.day + 1,\n            gameStatus: 1,\n            grid,\n            pawns,\n            enemies,\n            monsterPoints\n\n        })\n    },\n\n    mapTileHover: (state, actions, id) => {\n        let t = state.grid[id.y][id.x]\n        let p = state.currentPawn\n\n        if (state.tTimer && t.distance && !t.occupied) {\n            clearTimeout(state.tTimer)\n        }\n\n        if (t.occupied) {\n            t.occupied.isPlayer && actions.mapPawnHover(t.occupied)\n        }\n\n        if (state.turnPhase === 1 && t.distance && !t.occupied) {\n            return ({\n                magicLine: walkTo({ x: p.tX, y: p.tY }, id, state.grid),\n                tHovered: id,\n                tTimer: null\n            })\n        }\n        return (null)\n    },\n\n    mapTileUnhover: (state, actions, id) => {\n\n        state.pHovered && actions.mapPawnUnhover()\n\n        if (state.magicLine && !state.tTimer) {\n            let tTimer = setTimeout(() => actions.mapRemoveLine(), 20)\n            return ({ tTimer })\n        }\n\n    },\n\n    mapRemoveLine: () => {\n        return ({\n            tTimer: null,\n            magicLine: null\n        })\n    },\n\n    mapTileClick: (state, actions, id) => {\n\n        let t = state.grid[id.y][id.x]\n\n        if (state.turnPhase == 1 && !t.occupied && t.distance) {\n            actions.pawnMove(id)\n        }\n\n        if (state.turnPhase == 1 && t.occupied == state.currentPawn) {\n            actions.turnPhaseAction()\n        }\n\n    },\n\n    mapPawnHover: (state, actions, pawn) => {\n        return ({ pHovered: pawn })\n    },\n\n    mapPawnUnhover: () => {\n        return ({ pHovered: null })\n    },\n\n    //****PAWN************************************************************\n\n    pawnCreate: (state, actions, gID) => {\n\n        let guild = state.guilds[gID]\n\n        let newPawn = {\n            guild: guild.desc,\n            gID,\n            aegis: guild.aegis,\n            fatigue: 0,\n\n            attack: guild.attack,\n            move: guild.move,\n            health: guild.health,\n            special: guild.special,\n            isExhaust: false,\n            tX: 0,\n            tY: 0,\n            x: 0,\n            y: 0,\n            color: guild.color,\n            key: Math.random(),\n            icon: \"#p\",\n\n            isPlayer: true,\n        }\n\n        return { pawns: [...state.pawns, newPawn] }\n    },\n\n    pawnMove: (state, actions, dest) => {\n        let p = state.currentPawn\n\n\n        tween({\n            start: { x: p.x, y: p.y },\n            arr: walkTo({ x: p.tX, y: p.tY }, dest, state.grid)\n                .map(v => ({ x: cT(v.x), y: cT(v.y) })),\n            tickFN: actions.pawnMoveUpdate,\n            endFN: actions.pawnMoveDone,\n            duration: 50\n        })\n\n        state.grid[p.tY][p.tX].occupied = null\n\n        p.tX = dest.x\n        p.tY = dest.y\n        state.grid[p.tY][p.tX].occupied = p\n        if (p.isPlayer) { actions.pawnFatigue({ pawn: p, m: 1 }) }\n\n        return {\n            turnPhase: 2,\n            currentPawn: p,\n            magicLine: null\n        }\n    },\n\n    pawnMoveUpdate: (state, actions, loc) => {\n        let p = state.currentPawn\n        p.x = loc.x\n        p.y = loc.y\n\n        return ({ currentPawn: p })\n\n    },\n\n    pawnMoveDone: (state, actions) => {\n        if (state.currentPawn.isPlayer) {\n            if (state.tHovered) {\n                actions.mapPawnUnhover()\n                actions.mapTileHover(state.tHovered)\n            }\n            actions.turnPhaseAction()\n        } else {\n            actions.turnEnemyAction(state.currentPawn)\n        }\n    },\n\n    pawnDoNothing: (state, actions) => {\n        actions.turnDone()\n    },\n\n    pawnDoAttack: (state, actions, t) => {\n        let p = state.currentPawn\n        if (p.isPlayer) {\n            actions.pawnFatigue({ pawn: p, m: 5 })\n        }\n        actions.pawnHurt({ pawn: t, m: p.attack })\n\n        actions.turnDone()\n    },\n\n    pawnSpecial: (state, actions, t) => {\n        let p = state.currentPawn\n        if (p.isPlayer) {\n            actions.pawnFatigue({ pawn: p, m: p.special.cost })\n        }\n        actions.pawnHurt({ pawn: t, m: p.special.attack })\n        actions.turnDone()\n    },\n\n    pawnFatigue: (state, actions, e) => {\n        e.pawn.fatigue += e.m\n        if (e.pawn.fatigue < 0) {\n            e.pawn.fatigue = 0\n        }\n        if (e.pawn.fatigue >= 100) {\n            e.pawn.fatigue = 100\n            e.pawn.isExhaust = true\n        } else {\n            e.pawn.isExhaust = false\n        }\n        return { pawns: [...state.pawns] }\n    },\n\n\n    pawnHurt: (state, actions, e) => {\n\n        let t = e.pawn\n\n        if (!t.isPlayer) {\n            actions.monsterHurt(e)\n            return null\n        }\n\n        if (t.isExhaust) {\n            e.m *= 2\n        } else {\n            actions.pawnFatigue(e)\n        }\n\n        t.aegis -= e.m\n\n        if (t.aegis > 0) {\n            return state.pawns //armor remaining, so just return\n        }\n\n        //else distribute damage\n\n        t.health += t.aegis\n        t.aegis = 0\n\n        //player dead! :(\n        if (t.health < 1) {\n            t.health = 0\n            //remove from grid\n            state.grid[t.tY][t.tX].occupied = null\n\n            //remove from initiative, if they are still there\n            let i = state.initiative.indexOf(t)\n            if (i > -1) {\n                state.initiative.splice(i, 1)\n            }\n\n            //remove from pawn list\n            i = state.pawns.indexOf(t)\n            state.pawns.splice(i, 1);\n\n            //TODO somehow animate the death\n        }\n\n        return ({ pawns: [...state.pawns] })\n    },\n\n\n    //****MONSTER PAWNS************************************************************\n\n    monsterCreate: (state, actions, { gID, tX, tY }) => {\n        let guild = state.monsters[gID]\n\n        let newPawn = {\n            gID,\n\n            attack: guild.attack,\n            range: guild.range,\n            move: guild.move,\n            health: guild.health,\n\n            tX,\n            tY,\n            x: cT(tX),\n            y: cT(tY),\n            color: \"LightCoral\",\n            key: Math.random(),\n            icon: guild.icon,\n\n            isPlayer: false,\n            needsSpawn: true\n        }\n\n        state.grid[tY][tX].occupied = newPawn\n\n        return { enemies: [...state.enemies, newPawn] }\n\n    },\n\n    monsterHurt: (state, actions, e) => {\n        let t = e.pawn\n\n        t.health -= e.m\n\n\n        //monster dead! :(\n        if (t.health < 1) {\n            t.health = 0\n            //remove from grid\n            state.grid[t.tY][t.tX].occupied = null\n\n            //remove from initiative, if they are still there\n            let i = state.initiative.indexOf(t)\n            if (i > -1) {\n                state.initiative.splice(i, 1)\n            }\n\n            //remove from pawn list\n            i = state.enemies.indexOf(t)\n            state.enemies.splice(i, 1);\n\n            //TODO somehow animate the death\n        }\n        return ({ enemies: [...state.enemies] })\n    },\n\n    //****CAMP************************************************************\n\n    campInit: (state, actions) => {\n\n        let camp = state.camp\n\n        camp.phase = 0\n        camp.patrolKills = 0\n        camp.phaseReport = [\"\", \"\", \"\"]\n\n\n        return ({\n            gameStatus: 2,\n            turnPhase: 6,\n            currentPawn: null,\n            camp,\n            pawns: [...state.pawns]\n        })\n    },\n\n    campAdvance: (state, actions, e) => {\n\n        let camp = state.camp\n\n        camp.phaseReport[camp.phase] = e.report\n        camp.supplies -= e.cost\n        camp.pickGuild = false\n        camp.phase++\n\n        return ({\n            camp\n        })\n    },\n\n    campRest: (state, actions) => {\n\n        if (!campSanity(state.camp)) { return null }\n        for (let p of state.pawns) {\n            actions.pawnFatigue({ pawn: p, m: -15 })\n            p.aegis = state.guilds[p.gID].aegis\n        }\n\n        actions.campAdvance({ cost: 1, report: \"The defenders rested.\" })\n\n        return ({ pawns: [...state.pawns] })\n\n    },\n\n    campForage: (state, actions) => {\n\n        if (!campSanity(state.camp, false)) { return null }\n\n        if (isRare()) {\n            actions.campAdvance({ cost: 0, report: \"Depressingly, no supplies were found...\" })\n        } else if (isRare()) {\n            actions.campAdvance({ cost: -3, report: \"A large cache of three supplies was found.\" })\n        } else {\n            let amount = Math.floor(Math.random() * 2) + 1\n            actions.campAdvance({ cost: amount * -1, report: \"A few supplies were found.\" })\n        }\n\n    },\n\n    campTrain: (state, actions) => {\n        if (!campSanity(state.camp)) { return null }\n\n        let camp = state.camp\n        if (camp.train + 1 == camp.trainReq && state.pawns.length == 5) { return null } //max five defenders\n\n        actions.campAddTraining()\n\n        if (camp.train == camp.trainReq) {\n            actions.campTrainComplete()\n        } else {\n            actions.campAdvance({ cost: 1, report: \"Training progresses...\" })\n        }\n    },\n\n    campAddTraining: (state) => {\n        let camp = state.camp\n        camp.train++\n        return ({ camp })\n    },\n\n    campTrainComplete: (state) => {\n        let camp = state.camp\n\n        let guilds = state.guilds.map((g, i) => ({ ID: i, desc: g.desc }))\n        shuffle(guilds)\n\n        camp.pickGuild = [guilds[0], guilds[1], guilds[2]]\n        camp.trainReq++\n        camp.train = 0\n        return (\n            { camp })\n    },\n\n\n    campPickGuild: (state, actions, guild) => {\n        actions.pawnCreate(guild)\n        actions.campAdvance({ cost: 1, report: state.guilds[guild].desc + \" has joined the defenders.\" })\n    },\n\n    campPatrol: (state, actions) => {\n        if (!campSanity(state.camp)) { return null }\n\n        if (isRare()) {\n            actions.campAdvance({ cost: 1, report: \"The patrol found no sleeping monsters to murder.\" })\n        } else if (isRare()) {\n            actions.campKillMons(4)\n            actions.campAdvance({ cost: 1, report: \"A large den of monsters were slain while they slumbered.\" })\n        } else {\n            actions.campKillMons(Math.floor(Math.random() * 3) + 1)\n            actions.campAdvance({ cost: 1, report: \"A few sleeping monsters were found and slain.\" })\n        }\n    },\n\n    campKillMons: (state, actions, amount) => {\n        let camp = state.camp\n\n        camp.patrolKills = amount\n        return ({\n            camp\n        })\n    },\n\n    campToMap: (state, actions) => {\n        actions.mapInit()\n    }\n\n}","export default {\n    //general\n    gameStatus: 0,\n    /*gameStatus 0 = title\n                 1 = map\n                 2 = camp\n                 3,4 = victory/defeat*/\n    day: 1,\n    initative: [],\n    currentPawn: null,\n    turnPhase: 0,\n    actList: [],  //viable actions for pawns to take\n    /*turnPhase 0 = none\n        1 = player movement input\n        2 = animating movement\n        3 = player combat input\n        4 = animating combat\n        5 = monster activities\n        10 = match over*/\n    //\n\n    //camp stuff\n    camp: {\n        supplies: 4,\n        train: 0,\n        trainReq: 3,\n        patrolKills: 0,\n        pickGuild: false,\n        phase: 0,\n        phaseReport: [\"\", \"\", \"\"],\n    },\n    //\n\n    //map stuff\n    map: [17592186042429, 16613040457217, 8802810318785, 9326594942993, 8933622165621, 9674353522689, 10858189029375],\n\n    grid: {},\n    playerSpawn: [\n        { x: 1, y: 5 },\n        { x: 2, y: 6 },\n        { x: 1, y: 7 },\n        { x: 3, y: 5 },\n        { x: 3, y: 7 }\n    ],\n    pawns: [],\n    enemies: [],\n    start: {},\n    magicLine: null,\n    monsterPoints: 3,\n    //\n\n    //map UI stuff\n    tHovered: null, //tile\n    tTimer: null,\n    pHovered: null, //pawn\n\n    //\n\n\n    //guild data\n    guilds: [\n        /*specials target number\n         0 = self-pawn\n         1 = monster\n         2 or above is area and (size of area+1) So 2 is area 1.*/\n        {\n            desc: \"Warrior\",\n            color: \"LightGray\",\n            attack: 5,\n            move: 5,\n            health: 5,\n            aegis: 10,\n            special:\n                {\n                    desc: \"no-op\",\n                    cost: 3,\n                    range: 0,\n                    attack: 2\n                }\n        },\n\n        {\n            desc: \"Mage\",\n            color: \"Fuchsia\",\n            attack: 1,\n            move: 5,\n            health: 3,\n            aegis: 3,\n            special:\n                {\n                    desc: \"zap\",\n                    cost: 10,\n                    range: 7,\n                    attack: 5\n                }\n        },\n\n        {\n            desc: \"Archer\",\n            color: \"DarkSeaGreen\",\n            attack: 4,\n            move: 7,\n            health: 5,\n            aegis: 5,\n            special:\n                {\n                    desc: \"arrow\",\n                    cost: 3,\n                    range: 6,\n                    attack: 2\n                }\n        },\n        {\n            desc: \"Rogue\",\n            color: \"Khaki\",\n            attack: 5,\n            move: 9,\n            health: 5,\n            aegis: 3,\n            special:\n                {\n                    desc: \"knife\",\n                    cost: 2,\n                    range: 3,\n                    attack: 3\n                }\n        },\n        {\n            desc: \"Beserk\",\n            color: \"Chocolate\",\n            attack: 6,\n            move: 6,\n            health: 20,\n            aegis: 0,\n            special:\n                {\n                    desc: \"no-op\",\n                    cost: 3,\n                    range: 0,\n                    attack: 2\n                }\n        },\n        {\n            desc: \"Witch\",\n            color: \"LightPink\",\n            attack: 3,\n            move: 5,\n            health: 3,\n            aegis: 2,\n            special:\n                {\n                    desc: \"doom\",\n                    cost: 25,\n                    range: 3,\n                    attack: 20\n                }\n        }\n    ],\n\n    //monster data\n    monsters: [\n        {\n            cost: 1,\n            attack: 3,\n            range: 1,\n            move: 7,\n            health: 2,\n            icon: \"#m1\"\n        },\n\n        {\n            cost: 2,\n            attack: 2,\n            range: 6,\n            move: 4,\n            health: 3,\n            icon: \"#m2\"\n        },\n\n        {\n            cost: 3,\n            attack: 4,\n            range: 1,\n            move: 4,\n            health: 6,\n            icon: \"#m3\"\n        },\n\n        {\n            cost: 5,\n            attack: 5,\n            range: 1,\n            move: 3,\n            health: 15,\n            icon: \"#m4\"\n        }\n    ]\n\n}\n\n","import { h } from 'hyperapp'\r\nimport {cT, TOP, LEFT} from '../helpers'\r\n\r\nexport default ({ grid, hover, phase, unhover, select, init, pawns, line, cPawn, hPawn }) => {\r\n\r\n    let baseMap = []\r\n    let wallMap = []\r\n    let glowMap = []\r\n\r\n    let lineMap = []\r\n    let pawnMap = []\r\n\r\n    //*******TILES******\r\n    for (let y = 0; y < 14; y++) {\r\n        for (let x = 0; x < 22; x++) {\r\n            let t = grid[y][x]\r\n            let xP = cT(x)\r\n            let yP = cT(y)\r\n\r\n            baseMap.push(<rect x={xP} y={yP} href=\"#tile\" width=\"50\" height=\"50\" key={t.tkeys}\r\n                fill={t.grass} stroke=\"#5A5353\"\r\n                onmouseover={e => hover({ x, y })}\r\n                onmouseleave={e => unhover({ x, y })}\r\n                onclick={e => select({ x, y })}\r\n            />)\r\n\r\n            t.wall > 0 && wallMap.push(<rect x={xP} y={yP} href=\"#tile\" width=\"50\" height=\"50\" key={t.tkeys + 1000}\r\n                fill=\"#FFDEAD\" pointer-events=\"none\" />)\r\n\r\n            if (phase == 1 && t.distance != null) { //turnPhase 1 is player movement\r\n\r\n                glowMap.push(<rect x={xP} y={yP} href=\"#tile\" width=\"50\" height=\"50\" key={t.tkeys}\r\n                    fill={t.occupied != cPawn ? \"rgba(0,100,0,0.2)\" : \"rgba(0,200,0,0.8)\"} pointer-events=\"none\" />)\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //*******PAWNS******\r\n    for (let p of pawns) {\r\n        pawnMap.push(<use x={p.x} y={p.y} width=\"50\" height=\"50\" href={p.icon} fill={p.color} stroke=\"black\" stroke-width=\"3\" pointer-events=\"none\" key={p.key} filter=\"url(#pf)\"/>)\r\n        p === hPawn && pawnMap.push(<circle cx={p.x + 25} cy={p.y + 25} r=\"20\" fill=\"white\" fill-opacity=\"0.3\" pointer-events=\"none\" />)\r\n    }\r\n\r\n    //******MAGIC LINE**\r\n    if (phase == 1 && line) {\r\n        let prev = line[0]\r\n        for (let s of line) {\r\n            lineMap.push(<line x1={cT(prev.x) + 25} y1={cT(prev.y) + 25} x2={cT(s.x) + 25} y2={cT(s.y) + 25}\r\n                stroke-width=\"3\" stroke=\"white\" pointer-events=\"none\" />)\r\n            prev = s\r\n        }\r\n\r\n        lineMap.push(<use x={cT(prev.x) + 7} y={cT(prev.y) + 5} width=\"35\" height=\"35\" href={cPawn.icon} fill=\"white\" pointer-events=\"none\" />)\r\n    }\r\n\r\n\r\n    const style = {\r\n        position: \"absolute\",\r\n        left: LEFT,\r\n        top: TOP,\r\n        width: 1000,\r\n        height: 600,\r\n        border: \"10px solid #A07178\",\r\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n    }\r\n\r\n    return <svg style={style}>\r\n        <defs>\r\n            <filter id=\"pf\">\r\n            <feDropShadow flood-opacity=\".3\" dx=\"3\" dy=\"3\" stdDeviation=\"0\" />\r\n            </filter>\r\n\r\n            <filter id=\"wf\" >\r\n                <feMorphology operator=\"erode\" radius=\"8\" />\r\n                <feDropShadow flood-opacity=\".7\" dx=\"3\" dy=\"3\" stdDeviation=\"2\" />\r\n                <feDropShadow flood-opacity=\".1\" dx=\"-3\" dy=\"-3\" stdDeviation=\"5\" />\r\n            </filter>\r\n\r\n            <filter id=\"gf\"> \r\n                <feMorphology result=\"r\" in=\"SourceGraphic\" operator=\"erode\" radius=\"5\" />\r\n                <feBlend result=\"r2\" in=\"SourceGraphic\" in2=\"r\" mode=\"screen\" />\r\n\r\n            </filter>\r\n\r\n            <symbol id=\"p\" viewBox=\"0 0 512 512\">\r\n                <path d=\"M263 18h-3c-33 0-60 34-60 76 0 21 7 40 18 54-68 11-83 105-67 192h24l-1-105h19l1 127 9 133h47V319h19v176h44l12-154 1-106h19l-1 105h25c18-88-5-179-67-191 12-14 19-33 19-55 0-39-23-72-53-76h-2\" />\r\n            </symbol>\r\n\r\n            <symbol id=\"m1\" viewBox=\"0 0 512 512\">\r\n            <path d=\"M0 0h512v512H0z\" fill=\"none\"/><path d=\"M323 144l-14 1c19 33 6 75-19 108-10-94-17-19-36-20-19 0-22-77-34 9-20-37-27-78-14-95C89 142 19 237 5 293c27-27 116-19 128 15 17-23 52-30 83-29-1 21 18 22 38 22s39-1 38-23c33-4 71 3 89 27 13-33 101-42 129-14-41-82-93-147-187-147z\"/>\r\n            </symbol>\r\n\r\n            <symbol id=\"m2\" viewBox=\"0 0 512 512\">\r\n                <path d=\"M260 19c-74 0-134 52-134 112 17 56 39 80 40 139 60-51 23 54 11 74-146 119-128-51-87-13-75-132-161 199 112 74 6 139 177 72 100 14 9 42-48 47-49-13 0-23 11-43 27-57 149 290 301-142 131-4 67 3-10 114-65-1-12-38-52-109 8-74-19-56 38-90 39-139 0-60-58-112-133-112z\" />\r\n            </symbol>\r\n\r\n            <symbol id=\"m3\" viewBox=\"0 0 512 512\">\r\n                <path d=\"M148 252l54-34 29 67-81 86 13 86-43 52h53l22-50-13-75c104-47 103-28 193 20l4 56-11 49h69l-34-49-6-74-89-88 30-90 68 23-30 28c-90 128 29 13 71-34l-130-81c2-13 2-26-1-37 61-14 68-74 17-106 10 29 25 56-37 71-17-15-36-13-51 0-65-15-49-42-39-71-53 33-44 94 20 107 3 57-33 72-81 111l-47-19c-101-37-14 22 50 52z\" />\r\n            </symbol>\r\n\r\n            <symbol id=\"m4\" viewBox=\"0 0 512 512\">\r\n                <path d=\"M72 3c-2 9-4 19-4 30 1 31 31 51 69 56l52 29c-13 0-22 1-22 2-263 37-153 256-29 260 52-42-9-109-57-61 5-163 111-30 119 57-51 30-45 64-45 109l-53 25h107c-63-129 176-114 95 0h106l-54-25c9-54 5-81-44-109-8-137 197-195 113-61-48-48-105 23-52 65 283-99 40-269-42-260l56-31c38-5 69-27 69-56 0-13 2-21-3-30-4 30-34 49-71 53-78 9-162 9-240 0-36-4-66-23-70-53z\" />\r\n            </symbol>\r\n        </defs>\r\n\r\n        <g>\r\n            {baseMap}\r\n        </g>\r\n\r\n        <g filter=\"url(#wf)\">\r\n            {wallMap}\r\n        </g>\r\n\r\n        <g filter=\"url(#gf)\">\r\n            {glowMap}\r\n        </g>\r\n\r\n        <g opacity=\".8\">\r\n            {lineMap}\r\n        </g>\r\n\r\n        {pawnMap}\r\n\r\n    </svg>\r\n}","import { h } from 'hyperapp'\r\nimport {TOP} from '../helpers'\r\n\r\nexport default ({ pawn, i, current, highlight, hover, unhover }) => {\r\n\r\n\r\n\r\nconst styleCard = {\r\n    top: i * 130 + TOP,\r\n    background: highlight ? pawn.color : \"none\",\r\n}\r\n    const styleTitle = {\r\n        gridArea: \"h\",\r\n        background: current ? \"#A07178\" : \"none\",\r\n        color: current ? \"white\" : \"black\",\r\n        letterSpacing: \"2px\",\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"5px\",\r\n        textShadow: current ? \"1px 1px #050505\" : \"none\",\r\n        userSelect: \"none\"\r\n        \r\n    }\r\n\r\n    return (\r\n        <div style={styleCard} class=\"ccard\" onmouseover={e => hover(pawn)} onmouseleave={unhover}>\r\n            <div style={styleTitle}>{current ? \">\" + pawn.guild + \"<\" : pawn.guild}</div>\r\n            <L s=\"Armor\"/>      <L s={pawn.aegis}/>\r\n            <L s=\"Health\"/>     <L s={pawn.health}/>\r\n            <L s=\"Fatigue\"/>    <L s={pawn.fatigue}/>\r\n            <L s=\"Attack\"/>     <L s={pawn.attack}/>\r\n            <L s=\"Move\" b={false}/>       <L s={pawn.move} b={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst L = ({s, b=true}) => {\r\n    const style = {\r\n        borderBottom: b ? \"1px solid #A07178\" : \"none\",\r\n        userSelect: \"none\"\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            {s}\r\n        </div>\r\n    )\r\n}\r\n","import { h } from 'hyperapp'\r\nimport {TOP, LEFT, cT} from '../helpers'\r\n\r\nexport default ({ actList }) => {\r\n\r\n    let acts = []\r\n\r\n    for (let act of actList) {\r\n        //a-action d-desc  t-target  (in px)     \r\n        const pos = {\r\n            top: cT(act.t.tY),\r\n            left: cT(act.t.tX)\r\n        }\r\n        acts.push (<button style={pos} onclick={e=> act.a(act.t)} class=\"act\"> {act.d} </button>)\r\n    }\r\n\r\n\r\n    const wrap = {\r\n        position: \"absolute\",\r\n        top: TOP + 37,\r\n        left: LEFT + 10,\r\n        margin: 0\r\n    }\r\n\r\n    return (\r\n        <div style={wrap}>{acts}</div>\r\n    )\r\n}\r\n\r\n","import { h } from 'hyperapp'\r\nimport { TOP, LEFT } from '../helpers'\r\n\r\nexport default ({ camp, restFN, forageFN, patrolFN, trainFN, guildFN, battleFN }) => {\r\n\r\n    let style = {\r\n        position: \"absolute\",\r\n        left: LEFT,\r\n        top: TOP-20,\r\n    }\r\n\r\n\r\n\r\n    let trains = camp.trainReq - camp.train\r\n\r\n    let test = () => (camp.phase != 3 && camp.pickGuild==false)\r\n\r\n\r\n    return (\r\n        <div style={style} class=\"campd\">\r\n            <h2> Supplies: {camp.supplies} </h2>\r\n            <div>Morning: {camp.phaseReport[0]} </div>\r\n            <div>Noon: {camp.phaseReport[1]} </div>\r\n            <div>Afternoon: {camp.phaseReport[2]} </div>\r\n            <br/>\r\n            {test() && <CB label=\"REST\" desc=\"regain stamina, repair armor\" supplies={camp.supplies} fn={restFN} />}\r\n            {test() && <CB label=\"FORAGE\" desc=\"find supplies\" supplies={camp.supplies} fn={forageFN} cost={false} />}\r\n            {test() && <CB label=\"TRAIN\" desc={\"recruit a new defender (max five defenders) (\" + trains + \" more needed)\"} supplies={camp.supplies} fn={trainFN} />}\r\n            {test() && camp.patrolKills == 0 && <CB label=\"PATROL\" desc=\"slay sleeping monsters\" supplies={camp.supplies} fn={patrolFN} />}\r\n            \r\n            {camp.pickGuild && <div class='campd'>\r\n                <h2> A new defender joins. Select a guild:</h2>\r\n                {camp.pickGuild.map(g => <button class='camp' onclick={e => guildFN(g.ID)}><h1 class=\"camph\">{g.desc}</h1></button>)}\r\n            </div>}\r\n            \r\n            {camp.phase == 3 && <CB label=\"TO BATTLE\" desc=\"the monsters awaken\" fn={battleFN} supplies={camp.supplies} cost={false} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet CB = ({ label, desc, fn, supplies, cost = true }) => {\r\n\r\n    let disabled = false\r\n    if (cost && supplies == 0) { disabled = true }\r\n    return (\r\n        <button class='camp' onclick={e => fn()} disabled={disabled} >\r\n            {cost && <span>costs one supply</span>}\r\n            <h1 class='camph'>{label}</h1>{desc}</button>\r\n    )\r\n} ","import { h } from 'hyperapp'\nimport Map from './mapmaker.js'\nimport Ccard from './ccard.js'\nimport ActOverlay from './act.js'\nimport Camp from './camp.js'\nimport { TOP, LEFT } from '../helpers'\n\n//main\nexport default (state, actions) => {\n\n  let s = state.gameStatus\n  return (\n\n    <main>\n\n      {//title\n        s == 0 &&\n        <div>\n          <h1>Against the Endless Enemy</h1><br />\n          <button onclick={actions.gameInit}>Begin</button>\n        </div>\n      }\n\n      {//day counter\n        s > 0 && <h1>Day {state.day} {s == 2 && <span> --- Camp </span>}</h1>\n      }\n\n      {//character cards\n        s > 0 &&\n        <div>\n          {state.pawns.map((p, i) => {\n            return <Ccard pawn={p} i={i} current={p == state.currentPawn} highlight={state.pHovered == p}\n              hover={actions.mapPawnHover} unhover={actions.mapPawnUnhover} />\n          })}\n        </div>\n      }\n\n      {//map\n        (s == 1 || s > 2) && <Map grid={state.grid} pawns={[...state.pawns, ...state.enemies]} phase={state.turnPhase} line={state.magicLine} cPawn={state.currentPawn} hPawn={state.pHovered}\n          hover={actions.mapTileHover} unhover={actions.mapTileUnhover} select={actions.mapTileClick} />\n      }\n\n      {//action overlay\n        state.turnPhase == 3 && <ActOverlay actList={state.actList} />\n      }\n\n      {//camp\n        s == 2 && <Camp camp={state.camp}\n          restFN={actions.campRest} forageFN={actions.campForage} patrolFN={actions.campPatrol} trainFN={actions.campTrain} guildFN={actions.campPickGuild} battleFN={actions.campToMap} />\n      }\n\n\n      {//game over, victory\n        s == 3 && <Go msgt=\"the monsters have been beaten back\" msg=\"VICTORY\" msgb=\"proceed to camp...\" fn={actions.campInit} />\n      }\n\n      {//game over, defeat\n        s == 4 && <Go msgt={\"you survived for \" + state.day + \" days\"} msg=\"DEFEAT\" msgb=\"play again?\" fn={actions.gameInit} />\n      }\n    </main>\n  )\n}\n\n\nlet Go = ({ msgt, msg, msgb, fn }) => {\n  let style = {\n    position: \"absolute\",\n    left: LEFT + 80,\n    top: TOP - 10 ,\n  }\n\n  return (\n    <button class='camp' onclick={e => fn()} style={style}>\n      {msgt}\n      <h1>{msg}</h1>\n      {msgb}\n    </button>\n  )\n}\n\n//","import { app } from 'hyperapp'\nimport actions from './actions/actions.js'\nimport state from './state/state.js'\nimport view from './views/mainview.js'\n\napp({ state, actions, view })\n\n\n\n"],"names":["i","stack","h","type","props","node","children","arguments","length","push","Array","isArray","pop","app","container","root","document","body","toVNode","map","callbacks","skipRender","globalState","globalActions","flush","init","repaint","view","render","patchElement","cb","element","tagName","toLowerCase","call","childNodes","nodeType","nodeValue","module","state","actions","modules","initActions","source","keys","data","update","assign","target","merge","createElement","isSVG","createTextNode","createElementNS","oncreate","appendChild","setElementProp","name","value","oldValue","style","_","setAttribute","removeAttribute","updateElement","oldProps","onupdate","removeElement","parent","onremove","remove","removeChild","getKey","key","oldNode","nextSibling","insertBefore","len","oldLen","oldKeyed","oldElements","keyed","oldElement","oldChild","oldKey","j","newChild","newKey","keyedNode","reusableNode","search","grid","start","distanceLimit","ignorePawns","frontier","y","x","distance","came_from","current","shift","neighbors","n","nC","wall","occupied","isPlayer","walkTo","end","path","unshift","wrapTween","arr","tickFN","endFN","duration","first","T","Tweezer","on","slice","begin","opts","ease","t","b","c","d","frame","next","isRunning","events","directionX","directionY","window","requestAnimationFrame","_tick","bind","cancelAnimationFrame","timeStart","handler","val","e","forEach","currentTime","lastTick","timeElapsed","Math","round","_shouldTick","emit","TOP","LEFT","cT","campSanity","camp","cost","supplies","phase","pickGuild","isRare","random","pA","pB","hypot","tX","tY","lineSight","a","dx","abs","sx","dy","sy","err","acc","e2","rgb","r","g","join","shuffle","floor","temp","event","gameInitialState","pawnCreate","mapInit","log","turnSpawnEnemies","turnInitialState","turnNextPawn","col","m","monsters","p","monsterPoints","spawnLocs","gID","day","monsterCreate","enemies","pawns","initiative","turnBegin","currentPawn","turnPhaseMove","turnEnemy","pawn","move","actList","dist","pawnDoAttack","special","range","isExhaust","pawnSpecial","desc","pawnDoNothing","turnEnemyInit","dR","targets","viable","turnEnemyAction","row","tile","v","id","sort","dest","pawnMove","legnth","turnDone","mapInitialState","grid$","toString","shade","item","grass","tkeys","spawns","playerSpawn","loc","patrolKills","tTimer","mapPawnHover","turnPhase","pHovered","mapPawnUnhover","magicLine","setTimeout","mapRemoveLine","turnPhaseAction","guild","guilds","newPawn","aegis","attack","health","color","pawnMoveUpdate","pawnMoveDone","pawnFatigue","tHovered","mapTileHover","pawnHurt","fatigue","monsterHurt","indexOf","splice","icon","phaseReport","report","campAdvance","amount","train","trainReq","campAddTraining","campTrainComplete","ID","campKillMons","hover","unhover","select","line","cPawn","hPawn","baseMap","wallMap","glowMap","lineMap","pawnMap","xP","yP","prev","s","highlight","styleCard","styleTitle","L","acts","act","pos","wrap","restFN","forageFN","patrolFN","trainFN","guildFN","battleFN","trains","test","CB","label","fn","disabled","gameStatus","gameInit","mapTileUnhover","mapTileClick","campRest","campForage","campPatrol","campTrain","campPickGuild","campToMap","campInit","Go","msgt","msg","msgb"],"mappings":"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"}